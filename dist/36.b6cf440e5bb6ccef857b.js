(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{mVJc:function(t,e,s){"use strict";s.r(e),s.d(e,"StopWatch",function(){return i}),s.d(e,"AnimationTimer",function(){return a});class i{constructor(){this.startTime=0,this.elapsed=0,this.running=!1}start(){this.startTime=Date.now(),this.running=!0,this.elapsed=0}stop(){this.running=!1,this.elapsed=Date.now()-this.startTime}getElapsedTime(){return this.running?Date.now()-this.startTime:this.elapsed}reset(){this.startTime=Date.now(),this.elapsed=0}isRunning(){return this.running}}class a extends i{constructor(t=1e3,e=a.makeLinear()){super(),this.duration=t,this.transducer=e}getElapsedTime(){if(!this.isRunning()||!this.duration)return 0;let t=super.getElapsedTime(),e=t/this.duration;return t*(this.transducer(e)/e)}isExpired(){return this.getElapsedTime()>this.duration}static makeLinear(){return function(t){return t}}static makeEaseIn(t=1){return function(e){return Math.pow(e,2*t)}}static makeEaseOut(t=1){return function(e){return 1-Math.pow(1-e,2*t)}}static makeEaseInOut(){return function(t){return t-Math.sin(2*t*Math.PI)/(2*Math.PI)}}static makeElastic(t=3){return function(e){return(1-Math.cos(e*Math.PI*t))*(1-e)+e}}static makeBounce(t){let e=a.makeElastic(t);return function(t){return(t=e(t))<=1?t:2-t}}}e.default=class{constructor(){this.elapsed=0,this.isPaused=!1,this.transducer=(t=>t),this.transducerStartTime=0}calculateElapsed(){let{transducerStartTime:t,transducer:e,isPaused:s}=this;if(!this.isPaused){let s=Date.now()-t;"function"==typeof e&&(s=e(s)),this.elapsed+=s,this.transducerStartTime=Date.now()}}start(){this.elapsed=0,this.transducerStartTime=Date.now()}reset(){this.elapsed=0,this.transducerStartTime=Date.now()}paused(){this.isPaused||(this.calculateElapsed(),this.isPaused=!0)}unPaused(){this.isPaused&&(this.transducerStartTime=Date.now(),this.isPaused=!1)}getElapsed(){let{transducerStartTime:t,transducer:e,isPaused:s}=this;if(this.isPaused)return this.elapsed;let i=Date.now()-t;return"function"==typeof e&&(i=e(i)),this.elapsed+i}setTransducer(t,e){let{transducer:s}=this;this.calculateElapsed(),this.transducer=t,Number.isFinite(e)&&setTimeout(this.setTransducer.bind(this,s),e)}}}}]);